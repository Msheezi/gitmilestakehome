{"version":3,"sources":["components/dragstyles.js","components/draganddrop.js","actions/rewardActions.js","components/UndoRedo.js","App.js","root.js","reducers/rewardsReducer.js","reducers/rootReducer.js","store/store.js","store/localStorage.js","index.js"],"names":["MainContainer","styled","div","RewardBox","props","color","location","Title","h2","CategoriesContainer","CategoryColumn","PlacedReward","CloseButton","SpacerDiv","VertDiv","rewards","name","category","bgcolor","colors","r1","r2","r3","r4","r5","DragAndDrop","ev","preventDefault","id","key","dataTransfer","setData","cat","getData","updatedObj","this","find","obj","movingReward","placedReward","updateReward","removeReward","map","data-testid","className","onDragOver","e","onDrop","item","draggable","onDragStart","Date","now","length","reward","onClick","deletePlacedReward","localStorage","clear","clearState","renderPlacedRewards","styledrewards","renderRewards","drops","renderDropZones","style","borderBottom","gridArea","paddingTop","resetState","React","Component","connect","state","rewardState","present","keys","Object","dispatch","type","placeNewReward","deleteReward","moveReward","UndoRedo","canUndo","canRedo","onUndo","onRedo","disabled","past","future","UndoActionCreators","undo","redo","App","Root","store","initialState","undoableRewards","undoable","newState","action","freeze","assign","rootReducer","combineReducers","configureStore","persistedState","serializedState","getItem","JSON","parse","err","loadState","createStore","applyMiddleware","logger","document","addEventListener","subscribe","stringify","setItem","saveState","getState","window","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.20221b79.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n         display: grid;\n         width: 80vw;\n         grid-template-columns: minmax(150px,1fr) 0.5fr minmax(150px,1fr) minmax(150px,1fr) minmax(150px,1fr) minmax(150px,1fr) minmax(150px,1fr);\n         /* 150px 50px 150px 150px 150px 150px 150px  */\n          \n         grid-template-rows: auto;\n         /* grid-gap: 20px; */\n         grid-template-areas:\n           \"rewardheader vertspacer categoryheader . . . .\"\n           \".  . c1header  c2header  c3header  c4header  c5header\"\n           \". . . spacer . . .\"\n           \"r1 . r1c1 r1c2 r1c3 r1c4 r1c5\"\n           \"r2 . r2c1 r2c2 r2c3 r2c4 r2c5\"\n           \"r3 . r3c1 r3c2 r3c3 r3c4 r3c5\"\n           \"r4 . r4c1 r4c2 r4c3 r4c4 r4c5\"\n           \"r5 . r5c1 r5c2 r5c3 r5c4 r5c5\"\n           \". . . resetbutton . . .\";\n       `;\n       //update your column widths and grid gaps\n       // add in the barriers between columns\n\n\nexport const RewardBox = styled.div`\n  cursor: pointer;\n  box-sizing: border-box;\n  width: 100px;\n  height: 100px;\n  background-color: ${(props) => props.color};\n  text-align: center;\n  line-height: 100px;\n  margin: 20px auto;\n  grid-area: ${(props) => props.location};\n\n\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  grid-area: ${(props)=> props.location};\n  /* border-bottom: 1px solid black; */\n  margin: 20px auto;\n  /* text-decoration: underline; */\n  \n`;\n\nexport const CategoriesContainer = styled.div`\n   grid-column-start: 3 ;\n   grid-column-end: 8;\n   border-bottom: 1px solid black;\n   margin-bottom: 10px;\n   \n\n`\n\nexport const CategoryColumn = styled.div`\n    grid-area: ${(props)=> props.location};\n    grid-row-start: 2;\n    grid-row-end: span 7;\n    text-align: center;\n    border-right: 1px solid black;\n`\n\nexport const PlacedReward = styled.div`\n         line-height: 100px;\n         margin: 20px auto;\n         background-color: ${(props)=> props.color};\n         grid-area: ${(props)=> props.location};\n         text-align: center;\n         height: 100px;\n         width:100px;\n         position: relative;\n         \n\n\n       `;\n\nexport const CloseButton = styled.div`\n  \n  line-height:20px;\n  width: 20px;\n  position: absolute;\n  top: 2px;\n  right:2px;\n  cursor: pointer;\n  border-radius: 10px;\n  background-color: white;\n`\nexport  const SpacerDiv = styled.div`\ngrid-area: spacer;\nheight: 50px;\n\n`\n\nexport const VertDiv = styled.div`\n  grid-area: vertspacer;\n  grid-row-start: 1;\n  grid-row-end: span 8;\n  border-right: 1px solid black;\n  margin: 10px;\n`\n","import React from 'react'\nimport { updateReward, removeReward, movingReward, clearState} from '../actions/rewardActions'\nimport { connect } from \"react-redux\";\n\nimport {\n  MainContainer,\n  RewardBox,\n  Title,\n  CategoriesContainer,\n  CategoryColumn,\n  PlacedReward,\n  CloseButton,\n  SpacerDiv,\n  VertDiv\n} from \"./dragstyles\";\n\nconst rewards = [\n  { name: \"r1\", category: \"c1\", bgcolor: \"#f5e6e8\"},\n  { name: \"r2\", category: \"c2\", bgcolor: \"#a3f7b5\"},\n  { name: \"r3\", category: \"c3\", bgcolor: \"#40c9a2\"},\n  { name: \"r4\", category: \"c4\", bgcolor: \"#2f9c95\"},\n  { name: \"r5\", category: \"c5\", bgcolor: \"#bee3ea\"}\n]\n\nconst colors = {\n  r1: \"#f5e6e8\",\n  r2: \"#a3f7b5\",\n  r3: \"#40c9a2\",\n  r4: \"#2f9c95\",\n  r5: \"#bee3ea\"\n}\n\n class DragAndDrop extends React.Component{\n      \n\n    onDragOver(ev) {\n        ev.preventDefault()\n    }\n\n    onDragStart(ev, id, key) {\n        // console.log('dragstart:', id, 'key:', key);\n        \n        ev.dataTransfer.setData(\"id\", id)\n        ev.dataTransfer.setData(\"key\", key)\n    }\n\n    onDrop(ev, cat) {\n        \n        /*\n        1. Get the values from the on drag start\n        2. On drop:\n            if an existing reward, find the reward in props and pass to dispatch\n              passing the full reward to avoid shallow copy issues with redux-undo\n            if a new reward, create the object and pass to dispatch.\n \n        */\n\n        let id = ev.dataTransfer.getData(\"id\")\n        let key = ev.dataTransfer.getData(\"key\") \n\n        \n        let location = `${id}${cat}`\n        let updatedObj = this.props.rewards.find(obj => {\n           return obj.key === key\n        })\n        // console.log(\"key: \", key, \"location: \", location, \"UpdatedOBJ: \", updatedObj)\n            \n        /**\n         * bug: while placing the same square in the same swin lane doesn't\n         * duplicate, it does fire a redux action\n         * revise the conditional so that if it matches key and location\n         * do nothing else if key matches, do update else create obj\n         */\n\n        if (updatedObj && updatedObj.location !== location){\n          // updatedObj.location = location\n          this.props.movingReward(updatedObj, cat)\n\n        } else if (!updatedObj) {\n          \n          const placedReward = {\n            name: id,\n            location: location,\n            bgcolor: colors[id],\n            key: key,\n          };\n          \n          this.props.updateReward(placedReward);\n               }\n      \n    }\n\n    deletePlacedReward(key){\n      this.props.removeReward(key)\n    }\n\n    renderDropZones(){\n      let categories = [\"c1\",\"c2\",\"c3\",\"c4\",\"c5\"]\n      let renderedDropZones = \n      categories.map(cat => {\n      return (<CategoryColumn\n        data-testid={`${cat}Dropzone`}\n        key={cat}\n        location={`${cat}header`}\n        className=\"rewards1\"\n        onDragOver={(e) => this.onDragOver(e)}\n        onDrop={(e) => this.onDrop(e, `${cat}`)}\n      >\n        <span className=\"category\">{cat}</span>\n      </CategoryColumn>)\n      })\n      return renderedDropZones\n    }\n\n    renderRewards(){\n      const styledrewards = rewards.map(item => {\n        /*\n          this function is reading the rewards array and creating the starting items from \n          which users will drag a reward to a category\n        */\n\n        return (\n          <RewardBox\n            data-testid={`rewards${item.name}`}\n            key={item.name}\n            color={item.bgcolor}\n            location={item.name}\n            draggable\n            onDragStart={(e) => this.onDragStart(e, item.name, Date.now())}\n          >\n            {item.name}\n          </RewardBox>\n        );\n      })\n      return styledrewards\n    }\n\n\n    renderPlacedRewards(){\n      let placedReward\n      if (this.props.rewards.length > 0) {\n        placedReward = this.props.rewards.map((reward) => {\n\n          /*\n          this function is reading state for any placed rewards and creating dom nodes \n          to attach the values to\n          */\n\n          return (\n            <PlacedReward\n              data-testid={`reward ${reward.location}`}\n              location={reward.location}\n              key={reward.key}\n              color={reward.bgcolor}\n              draggable\n              onDragStart={(e) => this.onDragStart(e, reward.name, reward.key)}\n            >\n              {reward.name}\n              <CloseButton onClick={() => this.deletePlacedReward(reward.key)}>\n                X\n               </CloseButton>\n            </PlacedReward>\n          );\n        });\n      } \n      return placedReward\n    }\n\n\n   resetState(){\n     localStorage.clear()\n     this.props.clearState()\n   }\n\n    render(){\n\n        \n          let placedReward = this.renderPlacedRewards()\n          let styledrewards = this.renderRewards()\n          let drops = this.renderDropZones()\n          return (\n\n           <MainContainer>\n            <SpacerDiv/>\n            <Title style={{borderBottom: \"1px solid black\"}}location={\"rewardheader\"}>Rewards</Title>\n            {styledrewards}\n            <CategoriesContainer>\n              <Title>Categories</Title>\n            </CategoriesContainer>\n            \n            {drops}\n            {placedReward}\n            <VertDiv/>\n              <div style={{\n                gridArea: \"resetbutton\",\n                paddingTop: \"50px\",\n              }} >\n\n              <button onClick={() => this.resetState()}>Reset Local Storage</button>\n            </div>\n          </MainContainer>\n          )\n          ;\n\n    }\n}\n\nconst msp = state => {\n  const rewardState = state.rewards.present \n  const keys = Object.keys(rewardState)\n  let rewards = keys.map(key => (rewardState[key]))\n  return {\n    rewards: rewards, \n    keys: keys\n  }\n}\n\nconst mdp = dispatch => ({\n    updateReward: (reward) => dispatch(updateReward(reward)),\n    removeReward: (key) => dispatch(removeReward(key)),\n  movingReward: (reward, cat) => dispatch(movingReward(reward, cat)),\n  clearState:() => dispatch(clearState()) \n})\n\nexport default connect(msp, mdp)(DragAndDrop)","\nexport const ADD_REWARD = \"ADD_REWARD\"\nexport const DELETE_REWARD = \"DELETE_REWARD\"\nexport const UPDATE_REWARD = \"UPDATE_REWARD\"\n\n const placeNewReward = (reward) => ({\n    type: ADD_REWARD,\n    reward\n})\n\n const deleteReward = (key) => ({\n  type: DELETE_REWARD,\n  key,\n});\n\nconst moveReward = (reward, cat) => ({\n  type: UPDATE_REWARD,\n  reward,\n  cat\n});\n\nconst resetState = () =>({\n  type: \"RESET_STATE\"\n})\n\nexport const clearState = () => resetState()\nexport const updateReward = (reward) => placeNewReward(reward)\nexport const removeReward = (key) => deleteReward(key)\nexport const movingReward = (reward, cat) => moveReward(reward, cat);\n","import React from \"react\";\nimport { ActionCreators as UndoActionCreators } from \"redux-undo\";\nimport { connect } from \"react-redux\";\n/* ... */\n\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\n  <p>\n    <button type=\"undo\" onClick={onUndo} disabled={!canUndo}>\n      Undo\n    </button>\n    <button type=\"redo\" onClick={onRedo} disabled={!canRedo}>\n      Redo\n    </button>\n  </p>\n);\n\n\n/* ... */\n\nconst mapStateToProps = (state) => {\n  return {\n    canUndo: state.rewards.past.length > 0,\n    canRedo: state.rewards.future.length > 0,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUndo: () => dispatch(UndoActionCreators.undo()),\n    onRedo: () => dispatch(UndoActionCreators.redo()),\n  };\n};\n\nUndoRedo = connect(mapStateToProps, mapDispatchToProps)(UndoRedo);\n\nexport default UndoRedo;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport DragAndDrop from './components/draganddrop'\nimport UndoRedo from './components/UndoRedo'\n\nfunction App() {\n  return (\n    <div>\n\n    <DragAndDrop/>\n    <UndoRedo/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport App from './App'\n\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    \n      <App />\n    \n  </Provider>\n);\n\nexport default Root;\n","import {\n    ADD_REWARD,\n    DELETE_REWARD, UPDATE_REWARD\n} from '../actions/rewardActions'\n\nimport undoable, {  } from 'redux-undo'\n\nconst initialState =  {}\n\nconst RewardsReducer = (state = initialState, action) => {\n    Object.freeze(state)\n    let newState\n    switch (action.type) {\n        case ADD_REWARD:\n            newState = Object.assign({}, state)\n            \n            \n            newState[action.reward.key] = action.reward\n            return newState\n        case UPDATE_REWARD:\n           \n            const {key}= action.reward\n            \n            \n            newState = {...state, ...state.key,[key]: {...action.reward}}\n            newState[key].location = `${action.reward.name}${action.cat}`\n            \n            \n            return newState\n        case DELETE_REWARD:\n            newState = Object.assign({}, state)\n            delete newState[action.key]\n           \n            return newState\n        case \"RESET_STATE\":\n            return {}\n        default:\n            return state\n    }\n}\n\nconst undoableRewards = undoable(RewardsReducer)\n\nexport default undoableRewards","import {combineReducers} from 'redux'\nimport undoableRewards from './rewardsReducer'\n\n\nconst rootReducer = combineReducers({\n  rewards: undoableRewards,\n});\n\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\n\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"../reducers/rootReducer\";\nimport { loadState } from './localStorage'\n\n\n\nconst configureStore = () => {\n  const persistedState = loadState()\n  return createStore(rootReducer, persistedState, applyMiddleware(logger));\n\n}\n\n \nexport default configureStore;\n","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('savedState')\n        if (serializedState === null){\n            return undefined \n        }\n        return JSON.parse(serializedState)\n    } catch (err){\n        return undefined\n    }\n}\n\nexport const saveState = state => {\n    try {\n        \n        const serializedState = JSON.stringify(state)\n        localStorage.setItem(\"savedState\", serializedState)\n    } catch {\n        //ignore write errors\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Root from './root'\nimport configureStore from './store/store'\nimport { saveState } from \"./store/localStorage\";\n\n// import * as serviceWorker from './serviceWorker';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let store = configureStore()\n  store.subscribe(() => {\n    saveState(store.getState())})\n\n    window.getState = store.getState\n  const root = document.getElementById(\"root\")\n  ReactDOM.render(<Root store={store}/>, root)\n})\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}